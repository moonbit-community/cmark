package rami3l/cmark/cmark_html

// Values
fn buffer_add_html_escaped_char(@moonbitlang/core/buffer.T, Char) -> Unit

fn buffer_add_html_escaped_string(@moonbitlang/core/buffer.T, String) -> Unit

fn buffer_add_pct_encoded_string(@moonbitlang/core/buffer.T, String) -> Unit

fn from_doc(backend_blocks~ : Bool = .., safe~ : Bool, @rami3l/cmark/cmark.Doc) -> String!

fn html_escaped_char(@rami3l/cmark/cmark_renderer.Context, Char) -> Unit

fn html_escaped_string(@rami3l/cmark/cmark_renderer.Context, String) -> Unit

fn pct_encoded_string(@rami3l/cmark/cmark_renderer.Context, String) -> Unit

fn renderer(backend_blocks~ : Bool = .., safe~ : Bool) -> @rami3l/cmark/cmark_renderer.Renderer

fn safe(@rami3l/cmark/cmark_renderer.Context) -> Bool

fn xhtml_renderer(backend_blocks~ : Bool = .., safe~ : Bool) -> @rami3l/cmark/cmark_renderer.Renderer

// Types and methods
type HtmlRenderFootnote
impl Show for HtmlRenderFootnote
impl ToJson for HtmlRenderFootnote
impl @moonbitlang/core/json.FromJson for HtmlRenderFootnote

type State
impl Show for State
impl ToJson for State
impl @moonbitlang/core/json.FromJson for State

// Type aliases

// Traits

